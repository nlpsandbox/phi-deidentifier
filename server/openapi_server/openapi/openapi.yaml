openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    name: The NLP Sandbox Team
    url: https://Sage-Bionetworks.github.io/nlp-sandbox-schemas
  description: |
    The OpenAPI specification implemented by NLP Sandbox PHI Deidentifiers.
    # Overview
    TBA
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/nlp-sandbox/blob/main/LICENSE
  title: NLP Sandbox Deidentifier API
  version: 0.1.6
  x-logo:
    url: https://Sage-Bionetworks.github.io/nlp-sandbox-schemas/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about deidentified notes
  name: Deidentified Notes
- description: Operations about API health
  name: Health
paths:
  /deidentified-notes:
    post:
      description: Returns the deidentified notes
      operationId: deidentified_notes_read_all
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Note'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Note'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
      summary: Get deidentified notes
      tags:
      - Deidentified Notes
      x-openapi-router-controller: openapi_server.controllers.deidentified_notes_controller
  /health:
    get:
      description: Get the health of the API
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get Health
      tags:
      - Health
      x-openapi-router-controller: openapi_server.controllers.health_controller
components:
  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
  schemas:
    Email:
      description: User email address
      example: john.smith@example.com
      format: test
      type: string
    User:
      properties:
        username:
          example: John78
          minLength: 4
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: Smith
          type: string
        email:
          description: User email address
          example: john.smith@example.com
          format: test
          type: string
      required:
      - email
      - firstName
      - lastName
      - username
      type: object
    Entity:
      type: object
      properties:
        id:
          description: ID
          type: integer
          example: 0
        createdBy:
          description: The User who created this entity
          $ref: '#/components/schemas/User'
        createdAt:
          description: When the entity has been created
          type: string
          format: date-time
        updatedBy:
          description: The User who update this entity
          $ref: '#/components/schemas/User'
        updatedAt:
          description: When the entity has been updated
          type: string
          format: date-time
    Note:
      type: object
      description: A clinical note
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            text:
              description: The content of the note
              type: string
              example: 'On 09-03-1999, Ms Chloe Price met with Dr Joe.'
            type:
              description: The note type
              type: string
              enum:
                - pathology
                - phone_call
    Error:
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
    Health:
      example:
        status: pass
      properties:
        status:
          description: Health status
          enum:
          - pass
          - warn
          type: string
      type: object