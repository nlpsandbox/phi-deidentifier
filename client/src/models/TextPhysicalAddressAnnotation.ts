/* tslint:disable */
/* eslint-disable */
/**
 * NLP Sandbox Deidentifier API
 * The OpenAPI specification implemented by NLP Sandbox PHI Deidentifiers. # Overview TBA 
 *
 * The version of the OpenAPI document: 0.3.1
 * Contact: thomas.schaffter@sagebionetworks.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TextAnnotation,
    TextAnnotationFromJSON,
    TextAnnotationFromJSONTyped,
    TextAnnotationToJSON,
    TextPhysicalAddressAnnotationAllOf,
    TextPhysicalAddressAnnotationAllOfFromJSON,
    TextPhysicalAddressAnnotationAllOfFromJSONTyped,
    TextPhysicalAddressAnnotationAllOfToJSON,
} from './';

/**
 * A person name annotation in a text
 * @export
 * @interface TextPhysicalAddressAnnotation
 */
export interface TextPhysicalAddressAnnotation {
    /**
     * The position of the first character
     * @type {number}
     * @memberof TextPhysicalAddressAnnotation
     */
    start: number;
    /**
     * The length of the annotation
     * @type {number}
     * @memberof TextPhysicalAddressAnnotation
     */
    length: number;
    /**
     * The string annotated
     * @type {string}
     * @memberof TextPhysicalAddressAnnotation
     */
    text: string;
    /**
     * The confidence in the accuracy of the annotation
     * @type {number}
     * @memberof TextPhysicalAddressAnnotation
     */
    confidence?: number;
    /**
     * Type of address information
     * @type {string}
     * @memberof TextPhysicalAddressAnnotation
     */
    addressType?: TextPhysicalAddressAnnotationAddressTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum TextPhysicalAddressAnnotationAddressTypeEnum {
    City = 'city',
    Country = 'country',
    Department = 'department',
    Hospital = 'hospital',
    Organization = 'organization',
    Other = 'other',
    Room = 'room',
    State = 'state',
    Street = 'street',
    Zip = 'zip'
}

export function TextPhysicalAddressAnnotationFromJSON(json: any): TextPhysicalAddressAnnotation {
    return TextPhysicalAddressAnnotationFromJSONTyped(json, false);
}

export function TextPhysicalAddressAnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TextPhysicalAddressAnnotation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': json['start'],
        'length': json['length'],
        'text': json['text'],
        'confidence': !exists(json, 'confidence') ? undefined : json['confidence'],
        'addressType': !exists(json, 'addressType') ? undefined : json['addressType'],
    };
}

export function TextPhysicalAddressAnnotationToJSON(value?: TextPhysicalAddressAnnotation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': value.start,
        'length': value.length,
        'text': value.text,
        'confidence': value.confidence,
        'addressType': value.addressType,
    };
}


